(async function () {
  const targetArticles = [
    "–°—Ç–∞—Ç—å—è: 4", "–°—Ç–∞—Ç—å—è: 6", "–°—Ç–∞—Ç—å—è: 24", "–°—Ç–∞—Ç—å—è: 25", "–°—Ç–∞—Ç—å—è: 26", "–°—Ç–∞—Ç—å—è: 27",
    "–°—Ç–∞—Ç—å—è: 51", "–°—Ç–∞—Ç—å—è: 52", "–°—Ç–∞—Ç—å—è: 53", "–°—Ç–∞—Ç—å—è: 54", "–°—Ç–∞—Ç—å—è: 55", "–°—Ç–∞—Ç—å—è: 56",
    "–°—Ç–∞—Ç—å—è: 57", "–°—Ç–∞—Ç—å—è: 58", "–°—Ç–∞—Ç—å—è: 59", "–°—Ç–∞—Ç—å—è: 61", "–°—Ç–∞—Ç—å—è: 62", "–°—Ç–∞—Ç—å—è: 64",
    "–°—Ç–∞—Ç—å—è: 68", "–°—Ç–∞—Ç—å—è: 69", "–°—Ç–∞—Ç—å—è: 70", "–°—Ç–∞—Ç—å—è: 71", "–°—Ç–∞—Ç—å—è: 73", "–°—Ç–∞—Ç—å—è: 74",
    "–°—Ç–∞—Ç—å—è: 76", "–°—Ç–∞—Ç—å—è: 78", "–°—Ç–∞—Ç—å—è: 79", "–°—Ç–∞—Ç—å—è: 80", "–°—Ç–∞—Ç—å—è: 81", "–°—Ç–∞—Ç—å—è: 82",
    "–°—Ç–∞—Ç—å—è: 83", "–°—Ç–∞—Ç—å—è: 84", "–°—Ç–∞—Ç—å—è: 85", "–°—Ç–∞—Ç—å—è: 86", "–°—Ç–∞—Ç—å—è: 87", "–°—Ç–∞—Ç—å—è: 88",
    "–°—Ç–∞—Ç—å—è: 89", "–°—Ç–∞—Ç—å—è: 90", "–°—Ç–∞—Ç—å—è: 91", "–°—Ç–∞—Ç—å—è: 93", "–°—Ç–∞—Ç—å—è: 94", "–°—Ç–∞—Ç—å—è: 95",
    "–°—Ç–∞—Ç—å—è: 96", "–°—Ç–∞—Ç—å—è: 97", "–°—Ç–∞—Ç—å—è: 98", "–°—Ç–∞—Ç—å—è: 99", "–°—Ç–∞—Ç—å—è: 100", "–°—Ç–∞—Ç—å—è: 103",
    "–°—Ç–∞—Ç—å—è: 104", "–°—Ç–∞—Ç—å—è: 111", "–°—Ç–∞—Ç—å—è: 112", "–°—Ç–∞—Ç—å—è: 113", "–°—Ç–∞—Ç—å—è: 114", "–°—Ç–∞—Ç—å—è: 115",
    "–°—Ç–∞—Ç—å—è: 116", "–°—Ç–∞—Ç—å—è: 117", "–°—Ç–∞—Ç—å—è: 133", "–°—Ç–∞—Ç—å—è: 134", "–°—Ç–∞—Ç—å—è: 135", "–°—Ç–∞—Ç—å—è: 137",
    "–°—Ç–∞—Ç—å—è: 139", "–°—Ç–∞—Ç—å—è: 140"
  ];

  const container = document.querySelector('div._StructuresList_qq842_78');
  if (!container) {
    console.error('‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä _StructuresList_qq842_78 –Ω–µ –Ω–∞–π–¥–µ–Ω');
    return;
  }

  const delay = ms => new Promise(r => setTimeout(r, ms));
  const normalize = t => t?.replace(/\xa0/g, ' ').replace(/\s+/g, ' ').trim();
  const getMarginLeft = el => {
    const style = el?.getAttribute('style') || '';
    const match = style.match(/margin-left:\s*calc\(14% \+ (\d+)px\)/);
    return match ? parseInt(match[1]) : 0;
  };

  async function expandAllRecursively(level = 0) {
    let expandedAny = false;
    const items = Array.from(container.querySelectorAll('div._UnitWrapper_5g54m_7'));
    for (const item of items) {
      const icon = item.querySelector('svg._IconCollapse_5g54m_18.false');
      if (icon && icon instanceof Element) {
        const label = normalize(item.querySelector('span')?.textContent);
        console.log(`‚û°Ô∏è –†–∞—Å–∫—Ä—ã—Ç–∏–µ: "${label}" (—É—Ä–æ–≤–µ–Ω—å ${level})`);
        icon.dispatchEvent(new MouseEvent('click', { bubbles: true }));
        expandedAny = true;
        await delay(150);
      }
    }
    if (expandedAny) {
      await expandAllRecursively(level + 1);
    }
  }

  function uncheckAll() {
    const units = container.querySelectorAll('div._UnitWrapper_5g54m_7');
    let count = 0;
    units.forEach(unit => {
      const input = unit.querySelector('input._CheckboxInput_7esd8_10');
      const span = unit.querySelector('span');
      if (input && input.checked && span) {
        const label = normalize(span.textContent);
        console.log(`üîò –°–Ω—è—Ç–∞ –≥–∞–ª–æ—á–∫–∞: "${label}"`);
        span.click();
        count++;
      }
    });
    console.log(`‚úÖ –°–Ω—è—Ç–æ ${count} –≥–∞–ª–æ—á–µ–∫`);
  }

  async function markTargetArticles() {
    const allUnits = Array.from(container.querySelectorAll('div._UnitWrapper_5g54m_7'));
    for (let i = 0; i < allUnits.length; i++) {
      const unit = allUnits[i];
      const span = unit.querySelector('span');
      const text = normalize(span?.textContent);
      if (!text) continue;

      if (!targetArticles.some(article => text.includes(article))) continue;

      console.log(`üéØ –ù–∞–π–¥–µ–Ω–∞ —Ü–µ–ª–µ–≤–∞—è —Å—Ç–∞—Ç—å—è: "${text}"`);

      const collapseIcon = unit.querySelector('svg._IconCollapse_5g54m_18.false');
      if (collapseIcon) {
        console.log(`‚û°Ô∏è –†–∞—Å–∫—Ä—ã—Ç–∏–µ –≤–ª–æ–∂–µ–Ω–∏–π –¥–ª—è: "${text}"`);
        collapseIcon.dispatchEvent(new MouseEvent('click', { bubbles: true }));
        await delay(200);
      }

      const baseMargin = getMarginLeft(unit);
      const nested = [];

      for (let j = i + 1; j < allUnits.length; j++) {
        const next = allUnits[j];
        const nextMargin = getMarginLeft(next);
        if (nextMargin <= baseMargin) break;
        nested.push(next);
      }

      if (span && !unit.querySelector('input._CheckboxInput_7esd8_10').checked) {
        console.log(`‚òëÔ∏è –û—Ç–º–µ—á–µ–Ω–∞ —Å—Ç–∞—Ç—å—è: "${text}"`);
        span.click();
        await delay(100);
      }

      for (const nestedUnit of nested) {
        const nestedSpan = nestedUnit.querySelector('span');
        const nestedInput = nestedUnit.querySelector('input._CheckboxInput_7esd8_10');
        const nestedText = normalize(nestedSpan?.textContent);
        if (nestedSpan && nestedInput && !nestedInput.checked) {
          console.log(`  ‚îî‚îÄ ‚òëÔ∏è –í–ª–æ–∂–µ–Ω–Ω—ã–π –ø—É–Ω–∫—Ç: "${nestedText}"`);
          nestedSpan.click();
          await delay(80);
        }
      }
    }
  }

  console.log('üîÑ –ù–∞—á–∞–ª–æ –æ–±—Ä–∞–±–æ—Ç–∫–∏...');
  await expandAllRecursively();
  console.log('üìÇ –í—Å–µ –±–ª–æ–∫–∏ —Ä–∞—Å–∫—Ä—ã—Ç—ã');

  uncheckAll();

  console.log('üîç –ü–æ–∏—Å–∫ –∏ –æ—Ç–º–µ—Ç–∫–∞ —Ü–µ–ª–µ–≤—ã—Ö —Å—Ç–∞—Ç–µ–π...');
  await markTargetArticles();

  console.log('‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞: —Å—Ç–∞—Ç—å–∏ –æ—Ç–º–µ—á–µ–Ω—ã, –≥–∞–ª–æ—á–∫–∏ —Å–Ω—è—Ç—ã, –≤—Å–µ —Ä–∞—Å–∫—Ä—ã—Ç–æ');
})();
